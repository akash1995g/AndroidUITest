name: Build Android Reusable

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      ui_test:
        required: true
        type: string
    secrets:
      SONAR_TOKEN: # Declare secrets you will use in the steps
        required: true

# self-hosted
# ubuntu-latest

jobs:
  setup:
    runs-on: ${{ inputs.runner }}
    outputs:
      cache-hit: ${{ steps.cache-android.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Android Environment Setup
        uses: ./.github/actions/android-setup

  spotless:
    runs-on: ${{ inputs.runner }}
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Android Environment Setup
        uses: ./.github/actions/android-setup

      - name: Run Spotless
        run: ./gradlew spotlessCheck

  build:
    runs-on: ${{ inputs.runner }}
    needs: spotless
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Android Environment Setup
        uses: ./.github/actions/android-setup

      - name: Build with Gradle
        run: ./gradlew build

  unit-test:
    runs-on: ${{ inputs.runner }}
    needs: spotless
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Android Environment Setup
        uses: ./.github/actions/android-setup

      - name: Generate Code Coverage Report
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          CURRENT_BRANCH: ${{ github.ref_name }}
        run: ./gradlew unitTestCoverage

  assemble:
    runs-on: ${{ inputs.runner }}
    needs: [ build, unit-test, ui-test, ui-test-2 ]
    if: ${{ always() && needs.build.result == 'success' && needs.unit-test.result == 'success' && (needs.ui-test.result == 'success' || needs.ui-test.result == 'skipped') && (needs.ui-test-2.result == 'success' || needs.ui-test-2.result == 'skipped') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Android Environment Setup
        uses: ./.github/actions/android-setup

      - name: Build APK
        run: ./gradlew assembleRelease

  ui-test:
    runs-on: ${{ inputs.runner }}
    if: ${{ 
          (
          github.event_name == 'pull_request' &&
          !contains(github.event.pull_request.labels.*.name, 'Skip-UI-Test') &&
          !contains(github.event.pull_request.labels.*.name, 'Custom Emulator')
          ) || (
          github.event_name == 'workflow_dispatch' &&
          (github.event.inputs.ui_test == 'lib')
          )
        }}
    strategy:
      matrix:
        api-level: [ 33 ]  # <-- Customize API levels here!
        arch: [ x86_64 ]
    needs: spotless
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Start Emulator and Install App
        uses: ./.github/actions/emulator
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          package: com.cicdanduitest.androiduitest

  ui-test-2:
    runs-on: ${{ inputs.runner }}
    if: ${{
          (
          github.event_name == 'pull_request' &&
          !contains(github.event.pull_request.labels.*.name, 'Skip-UI-Test') &&
          contains(github.event.pull_request.labels.*.name, 'Custom Emulator')
          ) || (
          github.event_name == 'workflow_dispatch' &&
          (github.event.inputs.ui_test == 'self')
          )
      }}
    strategy:
      matrix:
        api-level: [ 33 ]  # <-- Customize API levels here!
        arch: [ x86_64 ]
    needs: spotless
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Emulator Environment Setup
        uses: ./.github/actions/emulator-setup
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          package: com.cicdanduitest.androiduitest


#      # Upload the APK as an artifact using the latest version 4
#      - name: Upload APK
#        uses: actions/upload-artifact@v4  # Updated to v3.1.0
#        with:
#          name: release-app-build
#          path: app/build/outputs/apk/release/app-release.apk
#      # Upload the APK as an artifact using the latest version 4
#      - name: Upload Unsigned APK
#        uses: actions/upload-artifact@v4  # Updated to v3.1.0
#        with:
#          name: unsigned-build
#          path: app/build/outputs/apk/release/app-release-unsigned.apk
